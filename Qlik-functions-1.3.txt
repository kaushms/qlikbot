QlikSense front-end formula cheatsheet


Formulas - Visualisation tricks - Front-end hacks & more


V 1.2
─
Thinkmetrics
NOTE!
Before you use.
Please use the Google doc version as that will be the version constantly being updated.
The link to the Google Doc is here:
Qlik front end functions
If the PDF you download is behind the Google Doc version, then please use the link to download the newest version. 
You are free to copy and paste the formulas direct from the Google sheet rather than downloading the pdf.


Link: Qlik front end functions


































General
1. Count Number of distinct customers across the entire dataset (Ignoring any selections)
2. Running Total
3. Running Total Percentage
TOTAL
4. Find the total sales per country (where the country dimension may or may not be used.)
Note: TOTAL <field>  gives the total for that field.
6. Find Sum ignoring Selections but taking Dimension into account use {1}
7. Find Sum of salesAmount ignoring Dimension and Selection
8. Percentage of SalesAmount per country for the total Sales of 2022 for all countries Ignoring the country dimension in the table but taking 2022 selection into account.
9. Percentage of SalesAmount of the country for the total SalesAmount of that country for all years (Ignoring the 2022 selection but taking the dimension country into account)
10. Percentage of SalesAmount of the country for the total SalesAmount for all countries for all years ( Ignoring the 2022 selection and the dimension country)
11. Total Sales Per Category in every row:
12. Percentage of Product Name Sales per Product Category:
13. Show the total sales for all products in every row
14. Percentage of Product Sales per Overall total sales for all products
AGGR()
16. Find the average SalesAmount per country
17. Find the average per country per customer
18. Find the Max Sales Amount per Customer
19. Find the Max Sales Amount per Customer in each row
20. Find Max Distinct Orders per country per customer
21. Retrieve the top 2 Rank customer names based on the distinct number of orders
22. Print out the top 5 Ranked customer's names based on the sales and print the names out
23. Rank customers per country based on the number of distinct orders
24. Find the Average Sales Amount per Country Per Customer
25. Find the Max Average Sales Amount per Country Per Customer
FirstSortedValue
26. Retrieve the customer Name with the Min Average Sale Amount per Country Per Customer
27. Retrieve the customer Name with the max Average Sale Amount per Country Per Customer
28. Find the Sum of cumulative aggregate sales per year and month
Set Expressions
Inner Set
29. Find the SalesAmount for the Year 2023 using an Inner Set Expression
30. Find the percentage of SalesAmount per customer for the Year 2023 using an Outer set expression
31. Apply an Outer set expression to a Master Measure
Set expressions with Lexical scoping
32. Find the average salesAmount per customer for the year 2023 minus the average overall sales for the country using the outer expression
Set identifiers:
33. Sum of SalesAmount for entire dataset disregarding any user selection (Takes dimension into account)
34. Sum of SalesAmount for any user selected data if no selection is made then the entire dataset (Takes dimension & user selection into account)
35. Sum of SalesAmount for the previous user selected data
36. Sum of SalesAmount ignoring any selection in the field Country
Set modifiers
37. Sum of SalesAmount for one selected year
38. Sum of SalesAmount for year 2023, and country USA
39. Sum of SalesAmount for the year 2023, and any country starting with ‘ S ’
Adding multiple field values in one modifier
40. Sum of SalesAmount for 3 selected years values from the field Year
41. Sum of SalesAmount for 3 selected country values from the field Country
Or
42. Sum of SalesAmount only for a certain date type
Using Single Quotes ‘ ‘  vs using Double Quotes “ “
43. Sum of SalesAmount for ‘United Kingdom’ country value from the field Country
44. Sum of SalesAmount for ‘2023-02-02’ date value from the field Date
45. Sum of SalesAmount for ‘United Kingdom’ , ‘UNITED KINGDOM’ , ‘united kingdom’ country values from the field Country
46. Sum of SalesAmount for all products that start with Ice* values from the field Product
47. Sum of Sales for all Year after 2022
Dollar $ Expansion in Set modifiers
48. Sum of SalesAmount for Calculated Max Year taking user selection into account.
49. Sum of SalesAmount for Calculated Max -1 Year taking user selection into account.
50. The sum of SalesAmount for Calculated Max Year without taking considering user selection.
51. Sum of SalesAmount for Max Order date field
52. Sum of SalesAmount for Min Order date field
53. Sum of SalesAmount for Previous month (sales occurred greater than or equal to one month back from today)
54. Sum of SalesAmount for Entire Previous month (sales occurred greater than or equal to start of the previous month)
55. Sum of SalesAmount for Rolling 12 months
Sum( {$<OrderDate = {">=$(=AddMonths(MonthStart(Today()),-12))"}>} SalesAmount)
56. Sum of SalesAmount for Rolling 12 months untill today
Sum( {$<OrderDate = {">=$(=AddMonths(MonthStart(Today()),-12))<=$(=(today()))"}>} SalesAmount)
57. Sum of SalesAmount for Rolling 12 months using a calendar flag
Sum( {$<rolling_13 = {'1'}>} SalesAmount)
58. Script function: Add flag in master calendar script:
Modifiers based on field values of other fields.
59. Sum of SalesAmount where for selected RealShippedDate is a value in WantedDeliveryDate
Set Operators
Union:
60. Find the Sum of SalesAmount for the YEAR 2023 union with Country USA.
61. Find the Sum of SalesAmount for the YEAR 2023 but excludes Country USA.
62. Find the Sum of Sales Amount for records that have both YEAR 2023 and Country is USA. (Intersection)
63. Find the Sum of Sales Amount for the dataset excluded by any selections made by the user.
64. Find the Sum of Sales Amount for the intersection of selection and bookmark
65. Find the Sum of Sales Amount for the dataset that is present in both user selection and bookmarks
66. Find the Sum of Sales Amount for user selected data or bookmarks
67. Find the Sum of Sales Amount excluding user selection or bookmarks
68. Year to Date Sum of Sales Amount based on Calendar Date
69. Current year-to-date Sum of SalesAmount with the calendar flag
70. Find the Sum of SalesAmount based on advanced wild search where the first name is 5 letters.
71. Sales amount based on advanced calculation expression
72. Sales amount for countries based on advanced search that start with U or end with land
73. Retrieve the first names for those whose Sales Amount is more than 20000 using Set Expressions
74. Retrieve the first names for those whose Sales Amount is more than 20000  And the Sales Amount using Set Expressions
Implicit set operators
75. The sum of SalesAmount for selected countries and 2 default countries
76. The sum of SalesAmount for selected products and all products starting with Oat except oatgurt
Set expressions inheritance rules (NEW OUTER SET EXPRESSIONS)
Outer Set inheritance to inner set
77. A case where no Set Identifier is added to the Inner Set. The outer set will be inherited to the inner set.
78. A case where Adding a Set Identifier to the Inner Set. The OuterSet will not be inherited into the InnerSet, since the inner set expression contains a set identifier.
New Set Expressions and AGGR()
79. A case where the Set1 will not be inherited into Set2.
80. A case where OuterSet will be inherited into both Set1 and Set2.
Elemental Functions P & E ()
81. Find the sum of SalesAmount for countries where the product Sneakers has been sold, you can use:
82. Find the Sum of SalesAmount for countries where the product Sneakers has never been sold, you can use:
83. Returns the SalesAmount of those customers that ever have bought the product ‘Hat’
84. Returns the SalesAmount of those customers that ever have bought the product ‘Hat’ based on possible values from the Supplier field
86. Count new customer percentage based on unique customerid in the max year - previous years
87. Count new customers based on unique customerid in the max year - that are not present in the previous years
88. Count Returning customers based on unique customerid in the max year - that are also present in the previous years
89. Count Returning customers percentage based unique customerid in the max year - that are also present in the previous years divided by the total distinct customers
90. Count Lost customers based on unique customerid that were present in the previous years but missing in the Max year.
Note: Same as finding the new customers but we use a - to calculate the customers missing in the list
91. Count Lost customers percentage based on unique customerid that were present in the previous years but missing in the Max year.
Note: Same as finding the new customers using Exclude but we use a - to calculate the customers missing in the list
RangeSum
92. Find the sum of a range of values
Above
93. Above examples:
ROWNO()
94. Calculate cumulative sales
Below
95. Calculate Below sales
Pareto Chart
96. Creating a Pareto Chart
97. ABC analysis dimension /Pareto chart dimension
PICK AND MATCH
Note: Sum sales using PICK Match instead of IF:
98. If the country is ‘US’, then red, IF country is ‘Sweden’ then green, else Yellow:
Chart Color functions
Color using ARBG function
99. Custom chart colors if SalesAmount more than 200000 then Red else Green:
COLOR using RBG
100. Custom chart colors if SalesAmount more than 200000 then Blue else Red:
Color using Color function
101. Custom chart colors if SalesAmount is more than 200000, then Blue else Red:
Inbuilt color codes in Qlik Sense
Conditional coloring
102. Change colors of a scatter plot based on variable input by the user.
103. Change background colors based on Rank Top 5 Ranked Product
104. Create a synthetic dimension in the front end
105. Create a synthetic dimension called Top, Middle, and Bottom countries and categorize countries based on Total SalesAmount
106. Create a synthetic dimension called Top, Middle, and Bottom countries and categorize countries based on Total SalesAmount - Method 2
Data cleaning functions
107. Clean the columns by removing the unwanted characters from the field values
108. Clean the columns by retaining only the wanted characters from the field values
109. Change the values to UPPER or LOWER
110. Choose Characters from the right and left and middle values of the field values
111. Find the length of values in a field
112. Clean values in a field by removing the spaces
113. Find the position of a substring in a text string
114. Extract the first name and the surname from the full names separated by a space
Combining the string functions
115. Find the position of the substring and a text string and then extract the next 3 characters
Cleaning challenge:
116. Clean the FIELD = 3453XY32Cleaning.Hero
117. Clean the FIELD =  <Cle3411an41-1D34a1145ta>
Column Functions
118. Based on the values of 2 columns, Change the color of the rows where the profit is over 100.
Date Time functions
119. Load date as format 2023/02/10 and interpret and reformat to 2023-02-10.
120. Convert from unix epoch  time stamp to normal date timestamp:
121. Extract Year and Month from the date
122. Extract Year Month from Today's date in the Year Month Format
Miscellaneous
Force 0 values to charts
123. Find the Sum of SalesAmount and force 0 values if there are no sales for certain months
124. Hide a chart until a selection is made in the Product Model
125. Adding conditional Indicators to measures: Such as upward arrow
126. Adding conditional Indicators to measures with miscellaneous symbols
127. Miscellaneous symbols list:
128. Convert numbers to the absolute value
General String functions
129. Combine values from 2 fields
130. Get Flight departure and arrival aggregated per flight No in this format:
Dynamic Titles:
132. Create a dynamic title based on the field selections in countries which says: Sales for countries: Country names selected.
133. Create a dynamic title which says “Total Sales for all Countries” if no selection is made in the field country else says Total sales for : followed by the country name selected.
134. Create a dynamic title based on the field selections in  2 fields, Products, and countries, which says : Sales for countries: Country names selected.
135. Create a list of OrderId per customer per country
Add Dynamic Links to your chart
138. Create a link that the user can click to visit an external webpage
Embed a button with link to external sites
139. Create a button that the user can select to visit an external website
Automate a sheet using a button.
140. Create a button that when pressed clears current selections and makes a selection called ‘Health’ from a field called Industry and automatically moves to the next sheet.
Create a What if Analysis chart based on 20% simulation of the actual sales
Variables
141. Create a What IF analysis using variables
142. Creating a Rank selector using Variables:
More chart tricks
143. Creating a chart with dimensional reference lines at and color different segments
144. Create a drill-down changing graph:
145. Create a custom tooltip and embed a chart in the tooltip.
146. Create 2 bar charts for side-by-side comparison of SalesAmount per Country using Alternate States
147. Create a chart to compare total salesAmount for 2 different selections made by user using Alternate State.( Applying alternate states to measures)
148. Create dynamic labels for the Alternate States selections.
149. Compare Alternate State charts by synchronizing selections between regular states the .( Applying alternate states to measures)
150. Create a chart that gives the Intersection of selections made in 2  Alternate State charts .( Applying alternate states to measures)
151. Create a chart that gives the union of selections made in 2  Alternate State charts .( Applying alternate states to measures)
152. Create a chart that gives the union of Default state and selections made in  Alternate State 1 charts .( Applying alternate states to measures)
153. Create a chart that gives the exclusion of selections made in 2  Alternate State charts .( Applying alternate states to measures)
154. Create a dynamic map that shows Top Ranked Cities per country based on highest sales. No of cities to be shown based on user input Rank values.
155. How to Reload Apps from the front end














Newly Added: 
22. Print out the top 5 Ranked customers' names based on the sales and print the names out
116. Convert from unix epoch  time stamp to normal date timestamp:
121. Adding conditional Indicators to measures with miscellaneous symbols
122. Miscellaneous symbols list:
138. Creating a chart with dimensional reference lines at and color different segments
139. Create a drill-down changing graph:
140. Create custom tool tip and embed a chart in the tool tip.
141. Create 2 bar charts for side by side comparison of SalesAmount per Country using Alternate States:
142. Create a chart to compare total salesAmount for 2 different selections made by user using Alternate State.( Applying alternate states to measures)
144. Compare Alternate State charts by synchronizing selections between regular states the .( Applying alternate states to measures)
145. Compare Alternate State charts by synchronizing selections between regular states the .( Applying alternate states to measures)
146. Create a chart that gives the Intersection of selections made in 2  Alternate State charts .( Applying alternate states to measures)
147. Create a chart that gives the union of selections made in 2  Alternate State charts .( Applying alternate states to measures)
148. Create a chart that gives the union of Default state and selections made in  Alternate State 1 charts .( Applying alternate states to measures)
149. Create a chart that gives the exclusion of selections made in 2  Alternate State charts .( Applying alternate states to measures)
150. Create a dynamic map that shows Top Ranked Cities per country based on highest sales. No of cities to be shown based on user input Rank values.
151. How to Reload Apps from the front end
55. Sum of SalesAmount for Rolling 12 months
Sum( {$<OrderDate = {">=$(=AddMonths(MonthStart(Today()),-12))"}>} SalesAmount)
56. Sum of SalesAmount for Rolling 12 months untill today
Sum( {$<OrderDate = {">=$(=AddMonths(MonthStart(Today()),-12))<=$(=(today()))"}>} SalesAmount)
57. Sum of SalesAmount for Rolling 12 months using a calendar flag
Sum( {$<rolling_13 = {'1'}>} SalesAmount)
58. Script function: Add flag in master calendar script










Notes: The fields used should be changed to the fields in your dataset.
General


1. Count Number of distinct customers across the entire dataset (Ignoring any selections)


Count(distinct {1} CustomerId)


Note : {1} ignores selections


2. Running Total 


Rangesum(Above(Sum(SalesAmount),0,RowNo()))


Or 


Sum(SalesAmount) → then select the Sum in the Totals function Drop Down option
  



3. Running Total Percentage
Rangesum(Above(Sum(SalesAmount),0,Rowno()))
/
Sum(Total SalesAmount)


TOTAL
4.  Find the total sales per country (where the country dimension may or may not be used.)
Sum(TOTAL < country> SalesAmount)


Note: TOTAL ignores dimension but abides the selection
Note: TOTAL <field>  gives the total for that field. 


5. Find the percentage of sales per customer per total sales in that region. 




Dimension used: customer, region


Sum(Sales)/Sum(TOTAL<region> Sales)


6. Find Sum ignoring Selections but taking Dimension into account use {1}


Sum({1} SalesAmount)


7. Find Sum of salesAmount ignoring Dimension and Selection


Sum(ALL SalesAmount)


Or 
Sum( {1} TOTAL SalesAmount)
Note:
In the below example Year 2020 is selected. Dimension is 
  

Note: Sum(SalesAmount) takes both selections and dimensions into account.
Note: Sum(TOTAL SalesAmount) gives the sum of sales for the selected year 2020
Note: Sum({1} SalesAmount) gives the sum for the country dimension ex: Armenia but for all the years ignoring the selection 2020
Note: Sum(ALL SalesAmount) gives the total sales for ALL countries and all Years ignoring both the selection and dimension


















Finding  Percentage of Total SalesAmount  Year 2022 is selected
  





Note: Image applicable for questions 8, 9, 10
8. Percentage of SalesAmount per country for the total Sales of 2022 for all countries Ignoring the country dimension in the table but taking 2022 selection into account.


Sum(SalesAmount)/ Sum(TOTAL SalesAmount)


9. Percentage of SalesAmount of the country for the total SalesAmount of that country for all years (Ignoring the 2022 selection but taking the dimension country into account)


Sum(SalesAmount)/ Sum({1} SalesAmount) 


10. Percentage of SalesAmount of the country for the total SalesAmount for all countries for all years ( Ignoring the 2022 selection and the dimension country)


Sum(SalesAmount)/ Sum(ALL SalesAmount) 


  
image applicable for: questions 11, 12 , 13, 14
11. Total Sales Per Category in every row: 


Sum(TOTAL < [Product category]> [Sales Amount])


12. Percentage of Product Name Sales per Product Category: 
Sum([Sales Amount])/ Sum(TOTAL <[Product category] >[Sales Amount])
13. Show the total sales for all products in every row
Sum(TOTAL [SalesAmount])


14. Percentage of Product Sales per Overall total sales for all products
Sum([SalesAmount]) / Sum(TOTAL [SalesAmount])
15. Find the Sum of SalesAmount per Product, disregarding the dimension Contract in the field.


Sum( total (aggr( sum( {<Contract=>} SalesAmount), [Product Name])))
AGGR()


(FieldName, (Sort-type, Ordering))


Structured parameters can be nested:


(FieldName, (FieldName2, (Sort-type, Ordering)))
  

Image applicable for questions: 15, 16
16. Find the average SalesAmount per country


Avg(Aggr(Sum(SalesAmount), Country))


Note: This aggregates the Sum of SalesAmount per Country, then divide by the no of distinct countries. In this case 1050 + 600 + 600 + 800 = 3050 then Divide by 4 which is the no of Unique countries = 762.5


17. Find the average per country per customer


Avg(Aggr(Sum(SalesAmount), Country, Customer))
Note:This aggregates the Sum of SalesAmount per Country per customer then divide by the no of distinct countries. In this case 400 + 150 + +500 + 600 + 600 + 800 = 3050 then Divide by 6 which is the no of Unique customers = 508.33










18. Find the Max Sales Amount per Customer


Aggr ( Max(SalesAmount),  CustomerName)


Note: This looks at the each sales from a customer and selects the max amount of it. EX: Jen has 3 orders 300, 100 ,100. Max sales is therefore 300. As shown below.
  

Image applicable for question 17


19. Find the Max Sales Amount per Customer in each row
Aggr ( NoDistinct Max(SalesAmount),  CustomerName)


Note: Since Distinct is implicit in AGGR() if you want this value to be in each row per customer then mention explicitly NODISTINCT. As shown below
  

Image is applicable for questions 18




20. Find Max Distinct Orders per country per customer


Max(Aggr(Count(distinct(OrderNumber)),Country,CustomerId))


21. Retrieve the top 2 Rank customer names based on the distinct number of orders
=If( aggr(rank(count(distinct(OrderNumber))),Country,CustomerId) <= 2, Customer_name)
Note: Change the number ‘2’ to any number you wish


22. Print out the top 5 Ranked customer's names based on the sales and print the names out
Expected format:
  

concat(distinct IF(aggr(rank(sum(SalesAmount)),Customer_name)<=5,aggr(rank(sum(SalesAmount)),Customer_name)&' - '&Customer_name& CHR(10)))


chr(10) gives a line break. Can be replaced with & ' '
Note: You can use different chr from here: 
https://www.w3schools.com/charsets/ref_html_ascii.asp


23. Rank customers per country based on the number of distinct orders


Aggr(Rank(Count(Distinct(OrderNumber))), Country, CustomerId) 


24. Find the Average Sales Amount per Country Per Customer


Use a dimension with Country and Customer
AGGR(Sum(SalesAmount)/ Count(Distinct(OrderID)), Country, Customer)


25. Find the Max Average Sales Amount per Country Per Customer
Max(AGGR(Sum(SalesAmount)/ Count(Distinct(OrderID)), Country, Customer))










FirstSortedValue
26. Retrieve the customer Name with the Min Average Sale Amount per Country Per Customer


FirstSortedValue(Customer, AGGR(Sum(SalesAmount)/ Count(Distinct(OrderID)), Country, Customer))


Note: Aggr is sorted in ascending order. The first sorted value, therefore, retrieves the lowest average Sales


27. Retrieve the customer Name with the max Average Sale Amount per Country Per Customer
Note: Adding “ - “in front of AGGR sorts the values in descending order.


FirstSortedValue(Customer,  - AGGR(Sum(SalesAmount)/ Count(Distinct(OrderID)), Country, Customer))








28. Find the Sum of cumulative aggregate sales per year and month


Sum(Aggr( Rangesum(Above(Sum(Sales),0,12)), (Year, (Numeric, Ascending)), (Month, (Numeric, Ascending)) ))










Note: This is aggr using structured parameter where Year and month are structured in ascending order and then aggregated


Year
	Month
	Sum(Sales)
	Structured Aggr()
	2022
	Jan
	100
	100
	2022
	Feb
	100
	200
	2022
	Mar
	100
	300
	2022
	Apr
	100
	400
	2022
	May
	100
	500
	2022
	Jun
	100
	600
	2022
	Jul
	100
	700
	2022
	Aug
	100
	800
	2022
	Sep
	100
	900
	2022
	Oct
	100
	1000
	2022
	Nov
	100
	1100
	2022
	Dec
	100
	1200
	2023
	Jan
	100
	100
	











Set Expressions
Set expressions can be used inside and outside aggregation functions, and are enclosed in curly brackets.
  

Source: help.qlik.com
Set Expression will be applied for both the measures automatically
New release of Qlik 2022 enables Set Expressions to be applied in 2 ways.
Inner Set
29. Find the SalesAmount for the Year 2023 using an Inner Set Expression


Sum( {$<Year={2023}>} SalesAmount )


30. Find the percentage of SalesAmount per customer for the Year 2023 using an Outer set expression
{<Year={2023}>} Sum(SalesAmount) / Count(distinct Customer)


31. Apply an Outer set expression to a Master Measure
Note: Outer set expression applied to master measure that is already created
{<Year={2023}>} [Master Measure]
Set expressions with Lexical scoping


Note: Set Expression will be applied to the expressions enclosed inside the brackets()


32.  Find the average salesAmount per customer for the year 2023 minus the average overall sales for the country using the outer expression


 ( {<Year={2023}>} Sum(SalesAmount) / Count(distinct Customer) ) – Avg(CountrySales)


Note: Here the OuterSet expression Year = 2023 will not be applied to - avg CountrySales, since it is outside the ()


Set identifiers:


1
	Represents the full set of all the records in the application, irrespective of any selections made.
	$
	Represents the records of the current selection in the default state. The set expression {$} is thus usually the equivalent to not stating a set expression.
	$1
	Represents the previous selection in the default state. $2 represents the previous selection-but-one, and so on.
	$_1
	Represents the next (forward) selection. $_2 represents the next selection-but-one, and so on.
	



33. Sum of SalesAmount for entire dataset disregarding any user selection (Takes dimension into account)
Sum ( {1} SalesAmount )
34. Sum of SalesAmount for any user selected data if no selection is made then the entire dataset (Takes dimension & user selection into account)
Sum ( {$} SalesAmount )
Same as         Sum ( SalesAmount )


Note: {$} is implied and does not need to be written


35. Sum of SalesAmount for the previous user selected data 
Sum ( {$1} SalesAmount )
36. Sum of SalesAmount ignoring any selection in the field Country


Sum({<Country = >} SalesAmount)
Same as
Sum({$<Country = >} SalesAmount)


Note: $ is implied i.e user selections are considered.




Set modifiers


Set modifier is what is enclosed in between < angled brackets >


37. Sum of SalesAmount for one selected year


Sum ( {$<Year = {2023} >} SalesAmount )






38. Sum of SalesAmount for year 2023, and country USA


Sum ( {$<Year = {2023}, Country = { 'USA' }>} SalesAmount)


39. Sum of SalesAmount for the year 2023, and any country starting with ‘ S ’


Sum({$<Year={2023}, Region={"S*"}>} SalesAmount)


Adding multiple field values in one modifier


You can add multiple field values in one modifier by adding a comma ‘ , ‘ between the field values.


40. Sum of SalesAmount for 3 selected years values from the field Year


Sum ({$<Year = {2023, 2024, 2025}>} SalesAmount)


41. Sum of SalesAmount for 3 selected country values from the field Country


Sum( {$<Country = { USA, Sweden, 'United Kingdom' }>} SalesAmount)
Or 
Sum( {$<Country = { 'USA', 'Sweden', 'United Kingdom' }>} SalesAmount)






42. Sum of SalesAmount only for a certain date type 
Sum({<Date_typ={'Order'} >}SalesAmount)
Sum({<Date_typ={'Shipped'} >}SalesAmount)
Sum({<Date_typ={'Due'} >}SalesAmount)
Note: Used in canonical calendar. Check out the masterclass for more info


Using Single Quotes ‘ ‘  vs using Double Quotes “ “


Note: Use Single quote on literal case sensitive values of fields or with dates. 
43. Sum of SalesAmount for ‘United Kingdom’ country value from the field Country


Sum( {$<Country = { 'United Kingdom' }>} SalesAmount)


44. Sum of SalesAmount for ‘2023-02-02’ date value from the field Date


Sum( {$<Date = { '2023-02-02' }>} SalesAmount)


Note: Use Double quotes for searches and for not case sensitive or case insensitive values


45. Sum of SalesAmount for ‘United Kingdom’ , ‘UNITED KINGDOM’ , ‘united kingdom’ country values from the field Country
Sum( {$<Country = { "United Kingdom" }>} SalesAmount)


46. Sum of SalesAmount for all products that start with Ice* values from the field Product
Sum( {$<Product = { "Ice*" }>} SalesAmount)


47. Sum of Sales for all Year after 2022 
Sum( {$<Year = { ">2022" }>} SalesAmount)




Dollar $ Expansion in Set modifiers


Note: Calculation inside the Set modifiers needs to be placed inside a Dollar $ sign expansion


48. Sum of SalesAmount for Calculated Max Year taking user selection into account. 


Sum( {$<Year = { $(=Max(Year)) }>} SalesAmount)


49. Sum of SalesAmount for Calculated Max -1 Year taking user selection into account. 
Sum({<Year = {$(=Max(Year)-1)}>}SalesAmount)


50. The sum of SalesAmount for Calculated Max Year without taking considering user selection.


Sum( {$<Year = {$(=Max({1} Year))}>} SalesAmount)


51. Sum of SalesAmount for Max Order date field


Sum( {$<OrderDate = {'$(=Date(Max(OrderDate)))'}>} SalesAmount)


52. Sum of SalesAmount for Min Order date field


Sum( {$<OrderDate = {'$(=Date(Min(OrderDate)))'}>} SalesAmount)


53. Sum of SalesAmount for Previous month (sales occurred greater than or equal to one month back from today)


Sum( {$<OrderDate = {">=$(=AddMonths(Today(),-1))"}>} SalesAmount)


Note: If today = 2023-02-25 then the result becomes <OrderDate = {">=2023-01-25"}>
Note: Addmonths adds months to the month in the given date. Here we we add -1 hence date from one previous month 


54. Sum of SalesAmount for Entire Previous month (sales occurred greater than or equal to start of the previous month)


Sum( {$<OrderDate = {">=$(=AddMonths(MonthStart(Today()),-1))"}>} SalesAmount)


Note: If today = 2023-02-25 then the result becomes <OrderDate = {">=2023-01-01"}>
monthstart takes the first date of the month from current date today() 
Addmonths adds months -1, hence start of the previous month


55. Sum of SalesAmount for Rolling 12 months   
Sum( {$<OrderDate = {">=$(=AddMonths(MonthStart(Today()),-12))"}>} SalesAmount)


56. Sum of SalesAmount for Rolling 12 months untill today  
Sum( {$<OrderDate = {">=$(=AddMonths(MonthStart(Today()),-12))<=$(=(today()))"}>} SalesAmount)


57. Sum of SalesAmount for Rolling 12 months using a calendar flag 
Sum( {$<rolling_13 = {'1'}>} SalesAmount)


58. Script function: Add flag in master calendar script:
 if([TempDate] >= date(monthstart(addmonths(today(),-13))) and [TempDate] <= date(today(),0), 1, 0) as rolling_13,




Modifiers based on field values of other fields.




59. Sum of SalesAmount where for selected RealShippedDate is a value in WantedDeliveryDate


Sum( {$< WantedDeliveryDate = RealShippedDate>} SalesAmount) 










Set Operators
Union:
Set Operator:         +          
 Returns the set of data that is present in any of the 2 set modifiers
Exclusion:
Set Operator:        —           
Returns the set of data not present in the second but present in the first. If used with only 1 set modifier then ‘ -’ returns the remaining of the dataset from the modifier. 
Intersection:
Set Operator:        *           
Returns the dataset present in both the dataset.
Symmetric difference (XOR):
Set Operator:        /           
 Returns the dataset that is either in one or the other modifier dataset but not in both.


60. Find the Sum of SalesAmount for the YEAR 2023 union with Country USA. 
Note: Year dataset will take selections into consideration since set identifier is $ while the country will neglect any selection because of set identifier 1


Sum({$<Year={2023}>+1<Country={'USA'}>}SalesAmount)


61. Find the Sum of SalesAmount for the YEAR 2023 but excludes Country USA. 
Note: Year dataset will take selections into consideration since set identifier is $ while the country will neglect any selection because of set identifier 1


Sum({$<Year={2023}>-1<Country={'USA'}>}SalesAmount)


62. Find the Sum of Sales Amount for records that have both YEAR 2023 and Country is USA. (Intersection)
Note: Year dataset will take selections into consideration since set identifier is $ while the country will neglect any selection because of set identifier 1


Sum({$<Year={2023}>*1<Country={'USA'}>}SalesAmount)


63. Find the Sum of Sales Amount for the dataset excluded by any selections made by the user.


Sum ({1-$} SalesAmount)


note:{1} selects the entire dataset.
Note: {$} considers the selections made by the user
— Exclusion Operator


64. Find the Sum of Sales Amount for the intersection of selection and bookmark


Sum ({BM01} SalesAmount)


65. Find the Sum of Sales Amount for the dataset that is present in both user selection and bookmarks


Sum ({$*BM01} SalesAmount) 


66. Find the Sum of Sales Amount for user selected data or bookmarks


Sum ({$+BM01} SalesAmount) 


67. Find the Sum of Sales Amount excluding user selection or bookmarks


Sum ({-($+BM01)} SalesAmount) 




68. Year to Date Sum of Sales Amount based on Calendar Date 
Sum({<calendar_date = {">=$(=(YearStart(Today())))<=$(=(today()))"} >}SalesAmount)


69.  Current year-to-date Sum of SalesAmount with the calendar flag


Sum({< CurYTDFlag = {'1'} >}SalesAmount)
Note: Your script should have a calendar flag for all dates in the current year till the current date.
70. Find the Sum of SalesAmount based on advanced wild search where the first name is 5 letters.
Sum({<first_name = {"?????"}  >}SalesAmount)


71. Sales amount based on advanced calculation expression


Sum({<first_name = {"=Sum(SalesAmount)>2000"}  >}SalesAmount)


72. Sales amount for countries based on advanced search that start with U or end with land 


Sum ({$<Country={"U*"}+{"*land"}>} Sales)


73. Retrieve the first names for those whose Sales Amount is more than 20000 using Set Expressions


Only({< first_name = {"=sum(SalesAmount)>20000"} >}first_name)


74. Retrieve the first names for those whose Sales Amount is more than 20000  And the Sales Amount using Set Expressions
Expected Format: Aaron has a sales of 43714.4608


Only({< first_name = {"=sum(SalesAmount)>20000"} >}first_name) 
&' has a sales of ' & 
Sum( {< first_name = {"=sum(SalesAmount)>20000"}> }SalesAmount)




Note: 
To disregard the dimensional grouping – Use the Total qualifier


To disregard the selection – Use Set Analysis










Implicit set operators


Implicit union         +=    
Implicit intersection *=   
Implicit exclusion -=  
Implicit difference /=   


75.  The sum of SalesAmount for selected countries and 2 default countries 


Note: Implicit union adds Sweden and Germany to the list of countries selected.


Sum( {$<Country += {'Sweden','Germany'} >} SalesAmount )
76. The sum of SalesAmount for selected products and all products starting with Oat except oatgurt


Note: Implicit union adds all products that start with Oat except Oatgurt to the list of products selected unless Oatgurt is a user-selected product in which case it will be included.


Sum( {$<Product += {"Oat*"} - {'Oatgurt'} >} SalesAmount )


Set expressions inheritance rules (NEW OUTER SET EXPRESSIONS)
Outer Set inheritance to inner set
77. A case where no Set Identifier is added to the Inner Set. The outer set will be inherited to the inner set.


{<OuterSet>} Sum( {<InnerSet>} Field )


78. A case where Adding a Set Identifier to the Inner Set. The OuterSet will not be inherited into the InnerSet, since the inner set expression contains a set identifier.
{<OuterSet>} Sum( {$<InnerSet>} Field )


New Set Expressions and AGGR()


79. A case where the Set1 will not be inherited into Set2.


Sum({<Set1>} Aggr(Count({<Set2>} Field )))


80. A case where OuterSet will be inherited into both Set1 and Set2.


{<OuterSet>} Sum({<Set1>} Aggr(Count({<Set2>} Field )))






Elemental Functions P & E ()


81. Find the sum of SalesAmount for countries where the product Sneakers has been sold, you can use:


Sum({<Country = P({1<Product={'Sneakers'}>} Country)>} SalesAmount)


82. Find the Sum of SalesAmount for countries where the product Sneakers has never been sold, you can use:


Sum({<Country = E({1<Product={'Sneakers'}>} Country)>} SalesAmount)


Note: Remember that selections are abided
83. Returns the SalesAmount of those customers that ever have bought the product ‘Hat’ 


Note: P() brings the possible customer names that have bought Hat


sum( {$<Customer = P({1<Product={'Hat'}>})>} SalesAmount )


84. Returns the SalesAmount of those customers that ever have bought the product ‘Hat’ based on possible values from the Supplier field
Note: P() brings the possible all values from supplier field names that are associated with Product - Hat. Those supplier values are then used as input in the  Customers field.


sum( {$<Customer = P({1<Product={'Hat'}>} Supplier)>} SalesAmount )


85. Returns the SalesAmount for those customers that never bought the product ‘Hat’. 
Note: The element function E( ) returns the list of customers that are excluded based on if they bought Product ‘Hat’. It brings in a list of all customers and excludes the ones that have bought Product ‘Hat’.


Sum( {$<Customer = E({1<Product={'Hat'}>})>} SalesAmount )


86. Count new customer percentage based on unique customerid in the max year - previous years 


Count(distinct {<CustomerId = e({< Year = {">=$(=min(Year)) and <=$(=Max(Year)-1)"}>})>} CustomerId)
/ count(distinct(CustomerId))
87. Count new customers based on unique customerid in the max year - that are not present in the previous years 


Count(distinct 
{<CustomerId = e({< Year = {">=$(=min(Year)) and <=$(=Max(Year)-1)"}>})>} CustomerId)






88. Count Returning customers based on unique customerid in the max year - that are also present in the previous years 


Count(distinct 
{< CustomerId = p({<Year={"<$(=max(Year))"}>}),Year={"$(=max(Year))"}>}CustomerId)






89. Count Returning customers percentage based unique customerid in the max year - that are also present in the previous years divided by the total distinct customers


Count(distinct
{< CustomerId = p({<Year={"<$(=max(Year))"}>}),Year={"$(=max(Year))"}>}CustomerId)
/
count(distinct(CustomerId))




90. Count Lost customers based on unique customerid that were present in the previous years but missing in the Max year. 
Note: Same as finding the new customers but we use a - to calculate the customers missing in the list




        - Count(distinct{< CustomerId = e({<Year={"$(=max(Year))"}>}),Year={"<$(=max(Year))"}>}CustomerId)






91. Count Lost customers percentage based on unique customerid that were present in the previous years but missing in the Max year. 
Note: Same as finding the new customers using Exclude but we use a - to calculate the customers missing in the list


Count(distinct{< CustomerId = e({<Year={"$(=max(Year))"}>}),Year={"<$(=max(Year))"}>}
CustomerId) /count(distinct(CustomerId))








RangeSum
92. Find the sum of a range of values


RangeSum (5,10,20)
	Returns 35
	

Above
Selects the value ABOVE the current row.
(Above(Sum(Sales),1))
1 is the OFFSET. = indicates one row above the current row. The default is one row above.
So ABOVE(Sum(SalesAmount)) is the same as ABOVE(Sum(SalesAmount), 1)


93. Above examples:


Customer Name
	SalesAmount
	Above(SalesAmount)
	Above(SalesAmount, 2)
	if ((SalesAmount) > above(SalesAmount), 'Higher')
	if ((SalesAmount) > above(SalesAmount), 'Higher')
Background expression:
if ((SalesAmount) > above(SalesAmount), green()')
	Jen
	100
	–
	-
	

	

	hick
	150
	100
	-
	Higher
	Higher
	Tom
	200
	150
	100
	Higher
	Higher
	





Note: Row could be the table row or the straight table equivalent of the chart.




ROWNO()


Returns the No of current rows in a table or straight table equivalent of a chart




94. Calculate cumulative sales


RangeSum(Above(sum(SalesAmount),0,RowNo()))


Note: This calculates the Sum of SalesAmount from the current row to all the rows ABOVE


Or  




Add a modifier to your Measure expression and choose Accumulation as your modifier






Below
Selects the value BELOW the current row.
Below(Sum(Sales),1)
1 is the OFFSET. = indicates one row below the current row. The default is one row below.
So Below(Sum(SalesAmount)) is the same as Below(Sum(SalesAmount), 1)


95. Calculate Below sales


Customer Name
	SalesAmount
	Below(SalesAmount)
	Below(SalesAmount, 2)
	if ((SalesAmount) < BELOW(SalesAmount), 'Higher')
	if ((SalesAmount) < BELOW(SalesAmount), 'Higher')
Background expression:
if ((SalesAmount) < BELOW(SalesAmount), green()')
	Jen
	100
	150
	200
	LOWER
	LOWER
	hick
	150
	200
	-
	LOWER
	LOWER
	Tom
	200
	-
	-
	-
	

	









Pareto Chart


96. Creating a Pareto Chart
  





Step 1: Add a combo chart :
Step 2: Add line percentage as : 
Rangesum(Above(Sum(SalesAmount),1,rowno()))/ Sum(TOTAL SalesAmount)
Step 3: Add bar chart with the measure
Sum(SalesAmount)


Step 4: For the bar chart, add color expression as 
Aggr(
if(rangesum(above(sum({<ProductSubcategoryName=>}SalesAmount)/sum({<ProductSubcategoryName=>}total SalesAmount),1,rowno())) < 0.8,green(), 
if(rangesum(above(sum({<ProductSubcategoryName=>}SalesAmount)/sum({<ProductSubcategoryName=>}total SalesAmount),1,rowno())) < 0.9,blue(),red())),
    (ProductSubcategoryName,(=sum({<ProductSubcategoryName=>}SalesAmount),Desc)))


Note:Replace ProductSubcategoryName with your desired Dimension
Note: (ProductSubcategoryName,(=Sum({$<ProductSubcategoryName=>} SalesAmount),Desc)) 
Is Sorted aggregate to ignore selection in Product sub Category field and is sorted descending based on the Sun of Sales Amount and makes the color remain even when values are selected. 


97. ABC analysis dimension /Pareto chart dimension
    
Replace ProductSubcategoryName with the desired Dimension. 
Step 1: Add a Filter Pane
Step 2: Add Dimension


Aggr
(if(rangesum(above(sum({1}SalesAmount)/sum({1}total SalesAmount),1,rowno())) < 0.8,'A', 
        if(rangesum(above(sum({1}SalesAmount)/sum({1}total SalesAmount),1,rowno())) < 0.9,'B','C')),
    (ProductSubcategoryName,(=sum({1}SalesAmount),Desc)))












PICK AND MATCH
Note: Sum sales using PICK Match instead of IF:
Tutorial on Pick and match: QlikSense tutorial: STOP using IF!!! Use these functions instead !! Peak & match funktions qliksense


98. If the country is ‘US’, then red, IF country is ‘Sweden’ then green, else Yellow:


PICK(MATCH(Country, 'US','Sweden')+1,argb(175,254,197,80),argb(175,242,0,0),argb(175,111,176,29))


Note: The first color dignifies the else clause, Yellow. CHeck the tutorial for detailed explanation.
Chart Color functions
Color using ARBG function


99. Custom chart colors if SalesAmount more than 200000 then Red else Green:


IF (SUM(SalesAmount) > 200000, argb(175,111,176,29),argb(175,242,0,0))


Notes: ARGB (alpha, R, B, G)
Alpha is value of Opacity value with 255 denotes full opacity. R, G, B is the value for Red, Blue and Green respectively. 
Instead of ARGB, you can use RGB(r, g, b) which gives the sames result but with fixed alpha






COLOR using RBG


100.  Custom chart colors if SalesAmount more than 200000 then Blue else Red:


IF (SUM(SalesAmount) > 200000, RGB(0,0,128),RGB(128,0,0))


Color using Color function


101. Custom chart colors if SalesAmount is more than 200000, then Blue else Red:


IF (Sum(SalesAmount) > 200000, blue(), red())


Stating the color, qlik retrieves the rbg value for that color. You can state the opacity or alpha inside the color 
Example: 
Red() - rgb(128,0,0)
color(alpha) brings the argb value with the alpha stated. Alpha is an integer between 0 to 255
Red(128) - argb(128, 128, 0,0)
















Inbuilt color codes in Qlik Sense


Color function
	RGB value
	ARBG value
	black ([alpha])
	(0,0,0)
	(alpha, 0, 0, 0)
	blue()
	(0,0,128)
	

	brown(128)
	

	(128, 128, 128, 0)
	darkgray([alpha])
	(128,128,128)
	

	green([alpha])
	(0,128,0)
	

	lightblue([alpha])
	(0,0,255)
	

	lightgray([alpha])
	(192,192,192)
	

	lightgreen([alpha])
	(0,255,0)
	

	lightmagenta([alpha])
	(255,0,255)
	

	lightred([alpha])
	(255,0,0)
	

	magenta([alpha])
	(128,0,128)
	

	red([alpha])
	(128,0,0)
	

	white([alpha])
	(255,255,255)
	

	yellow([alpha])
	(255,255,0)
	

	



Conditional coloring
102. Change colors of a scatter plot based on variable input by the user.
  
 
Check the Masterclass for detailed instruction
Tutorial: Dynamic Target Quadrant In QLIK SENSE.


If( [2022 Revenue] >= $(VRevenue) and [2022 Expenses] <= $(vExpense), red(),blue())


Where VRevenue and vExpense and values stored in variables.


Or
If( [2022 Revenue] >= 500000 and [2022 Expenses] <= 100000, red(),blue())


103. Change background colors based on Rank Top 5 Ranked Product


IF(Rank(Sum(SalesAmount))<= 5, green(),red())














Create a synthetic dimension
Note: Synthetic dimensions are calculated dimensions created in the front end to categorize the data.


104. Create a synthetic dimension in the front end
Tutorial on Synthetic dimensions: PART 1: How to create Synthetic Dimensions and custom measures with Valuelist function -Qlik Sense


Create a dimension: VALUELIST('Top Countries', 'Middle Countries', 'Bottom Countries' )


105. Create a synthetic dimension called Top, Middle, and Bottom countries and categorize countries based on Total SalesAmount 
Tutorial on Synthetic dimensions: Qliksense tutorial: Synthetic Dimensions using calculated set expression. Part 3.


Step 1: Create a dimension: VALUELIST('Top Countries', 'Middle Countries', 'Bottom Countries' )
Or 
Create a variable called vToplist columns and enter the value as 'Top Countries', 'Middle Countries', 'Bottom Countries'
In dimensions add =ValueList($(vToplist))
Add measure:     Pick(Match(ValueList($(vToplist)), $(vToplist)),
count( distinct{<Country ={"=sum(SalesAmount)>=1000000"}>}Country)
, count(distinct{<Country ={"=sum(SalesAmount)<1000000 and Country={"=sum(SalesAmount)>=500000"}>} Country),count( distinct{<Country ={"=sum(SalesAmount)>=100000"}>} Country) )


Method without variable:
IF(Valuelist('Top Countries', 'Middle Countries', 'Bottom Countries' ) = 'Top Countries',
count( distinct
           {<Country ={"=sum(SalesAmount)>=1000000"}>}Country)
, 
IF(Valuelist(‘Top Countries’, ‘Middle Countries’, ‘Bottom Countries’ )= ‘Middle Countries’,
count(distinct
          {<Country ={"=sum(SalesAmount)<1000000 and Country ={"=sum(SalesAmount)>=500000"}>} Country),
     IF(Valuelist('Top Countries', 'Middle Countries', 'Bottom Countries' ) = 'Bottom Countries',
count( distinct
          {<Country ={"=sum(SalesAmount)>=100000"}>} Country) ) )




106.  Create a synthetic dimension called Top, Middle, and Bottom countries and categorize countries based on Total SalesAmount - Method 2
Tutorial: Synthetic Dimension Part 2: Creating calculated dimension while using AGGR function in QlikSense
Create a dimension:
AGGR(
     if(sum(SalesAmount) >=1000000, dual('Top Countries', -1),
     if(sum(SalesAmount) <1000000 and sum(SalesAmount)>= 500000, dual('Middle Countries', 0),
     if(sum(SalesAmount) <100000 ,dual('Bottom Countries', 1)))
, Country)
Measure: Count( Distinct Country)










Data cleaning functions
107. Clean the columns by removing the unwanted characters from the field values




PurgeChar ( 'w5h7a8t','578') 
Purgechar ('value', 'characters to purge')
	result: ‘what’
	

108. Clean the columns by retaining only the wanted characters from the field values




 
Keepchar (‘text’, ‘characters to keep’)
	

result: ‘what’
	

109. Change the values to UPPER or LOWER


UPPER ( ' AweSome' ) 


	result: ‘AWESOME’
	LOWER ( 'AweSome' ) 
	result: ‘awesome’
	

110. Choose Characters from the right and left and middle values of the field values


LEFT ( 'Helloweicsd',5 ) 


left('value', count)
	result: ‘Hello’


Picks the first 5 values from the left
	Right  ( ' bloodyhell', 4) 


Right (‘value’, count)
	result: ‘hell’
Picks the first 4 from the right 
	Mid('whatFUNitis', 5, 3)
Mid('whatFUNitis', 5)


Mid( 'Value', start, count)




	Result: ‘FUN’
Result: ‘FUNitis’
	

111. Find the length of values in a field


Len('bonkers')




	Result: 7
	











112. Clean values in a field by removing the spaces


Ltrim('  blimey')




	Result: ‘blimey’
	Rtrim('groot  '  )
	Result: ‘groot’
	

113. Find the position of a substring in a text string


Index('1999-01-05','-', 1)
First 1 occurrence of the ‘-’ is in position 5
=Index('1999-01-05','-', 2)
Second ‘2’ occurrence of the ‘-’ is in position 8


Index(‘value’, substring[, count])
	Result: 5


Result 8
	



114. Extract the first name and the surname from the full names separated by a space


Subfield( 'James Bond' , ' ' , 1)
Subfield( 'James Bond' , ' ' , 2)
Subfield( 'James Bond' , ' ' , -1)
Subfield( '1999-01-05', '-', 1)
	Result: James
Result: Bond
Result: Bond
Result: 1999
	

 Combining the string functions


115. Find the position of the substring and a text string and then extract the next 3 characters


Mid( '1999-007-001',Index('1999-007-001','-')+1,3)
1999-007-001 = Field


Index gets the first position of the ‘-’ and then +1 is added to it , then the function mid extracts the next 3 digits.


Subfield( '1999-007-001', '-', 2)
	Result: 007










Result: 007
	

Cleaning challenge:
116. Clean the FIELD = 3453XY32Cleaning.Hero


Right(FIELD, len(FIELD)-index(FIELD, 'XY32' )-3) 


Subfield( Right(FIELD, len(FIELD)-index(FIELD, 'XY32' )-3), '.',1) 




Subfield( Right(FIELD, len(FIELD)-index(FIELD, 'XY32' )-3), '.',2) 
	Result: Cleaning.Hero


First Name Result: Cleaning            




Last Name Result: Hero
	



117. Clean the FIELD =  <Cle3411an41-1D34a1145ta>


PurgeChar(FIELD, '341156')


Replace(field, '-', ' ')


TextBetween(field, '<', '>')


Subfield(subfield(FIELD, '<', 2), '>', 1)






	Result: <Clean-Data>
Result: <Cle3411an41 1D34a1145ta>           


Result: Cle3411an41-1D34a1145ta


Result: Cle3411an41-1D34a1145ta
	

Putting all the above functions together


Subfield(subfield(Replace(PurgeChar(FIELD, '341156'), '-', ' '), '<', 2), '>', 1)


Or 


TextBetween(Replace(PurgeChar(FIELD, '341156'), '-', ' '), '<', '>')




	Result: Clean Data






Result: Clean Data
	



Column Functions
In the front end, create a column based on the difference in values of 2 other columns
Column(ColumnNo) column(1) refers to the first measure column. Column ignores the dimension columns.


Product Name
	Sales Amount
	Cost Of Goods
	Profit
Column(1) - Column(2)
	X
	110
	50
	60
	Y
	210
	100
	110
	Z
	320
	150
	170
	S
	100
	60
	40
	118. Based on the values of 2 columns, Change the color of the rows where the profit is over 100.
Add the below in background expression:
IF(Column(1) - Column(2) >= 100, Green(), Red())
























Date Time functions 
119. Load date as format 2023/02/10 and interpret and reformat to 2023-02-10.


Date(Date#('2023/02/10', 'YYYY/MM/DD'), 'DD-MM-YYYY') 


Note: Date#() interprets the string and calculates the appropriate numerical component 
Note: Date() to that result to reformat the string representation to the required format DD-MM-YYYY.


120. Convert from unix epoch  time stamp to normal date timestamp:
Input:1677938227
timestamp((‘1677938227’/ 86400) + 25569) = 2023-03-04 13:57:07
Result: 2023-03-04 13:57:07


121. Extract Year and Month from the date


Year(DateField)
Month(DateField)


122. Extract Year Month from Today's date in the Year Month Format
Date((Today()), 'YYYY-MM')


Function
	Formula
	Result
	Get the starting date of the previous following year
	AddYears(YearStart(Today()), 1)
	2024-02-01
	Get the starting date of the previous year
	AddYears(YearStart(Today()), -1)
	2022-02-01
	Add 3 months to the current and extract the year month
	Date(MonthEnd(AddMonths(today(), 1)), 'YYYY-MM')
	2023-03
	Remove 3 months from the current and extract the year month
	Date(MonthEnd(AddMonths(today(), -1)), 'YYYY-MM')
	2023-01
	Miscellaneous
 
Force 0 values to charts


123. Find the Sum of SalesAmount and force 0 values if there are no sales for certain months


  



Sum(SalesAmount) + sum({1} 0 )


124. Hide a chart until a selection is made in the Product Model
  



In data handling : add a calculation condition  


IF(GetSelectedCount([Product Model]) = 0, 0, 1)


Add Label:
Shows the Chart when more than one Product model is selected
=IF(GetSelectedCount([Product Model]) = 0,'No Product Model selected')






125. Adding conditional Indicators to measures: Such as upward arrow
Result  


Choose the measure —> Representation - Indicator —-> Add limits click on the limit( color) Choose color and symbol
  
  







126. Adding conditional Indicators to measures with miscellaneous symbols
Tutorial: QLIK SENSE : How to add custom indicator symbols. based on measure values. #qlik #qliksense
Note: video tutorial-:    Different symbols can be found here: 
HTML Symbol Entities Reference
if(sum(SalesAmount) > 20000, chr(9830), chr(9824))


Result:   
















127. Miscellaneous symbols list:
Check full list here : HTML Unicode UTF-8
chr(9824)
	♠
	chr(9827)
	♣
	chr(9829)
	♥
	chr(9830)
	♦
	chr(915)
	Γ
	chr(8719)
	∏
	chr(8721)
	∑
	chr(8709)
	∅
	chr(8383)
	₿
	chr(8613)
	↥
	chr(8615)
	↧
	chr(8756)
	∴
	chr(8757)
	∵
	chr( 9698)
	◢
	chr(9701)
	◥
	chr(9756)
	☜
	chr(9757)
	☝
	chr(9758)
	☞
	chr(9759)
	☟
	chr(128400)
	🖐
	chr(128578)
	🙂
	chr(128577)
	🙁
	

128. Convert numbers to the absolute value
FABS(-5.5)  Result: 5.5








General String functions


129. Combine values from 2 fields


Field1 & ‘----->’& Field2




130. Get Flight departure and arrival aggregated per flight No in this format:
LHT -->  BLR; CPH--> STM; AMS --> MUC; 


=Aggr(Concat(FlightDeparture & '--> '&FlightArrival, '; '), FLightNo)


131. By Default show the max Year else the user selected year.
Create a variable with the following:


If(GetselectedCount(Year) > 0, GetFieldSelections(Year), Max(Year)


Note: GetSelectedCount Counts the field Year selections. If a user selects a field then the count is greater than 0 hence the function GetFieldSelections brings the years selected by the user. Else the function MAX brings in the Max Year value.


Dynamic Titles:




132. Create a dynamic title based on the field selections in countries which says: Sales for countries: Country names selected.


Note: Click on General → Title
  



 ='Sales for Countries: '& GetFieldSelections(country)


Result:   










133. Create a dynamic title which says “Total Sales for all Countries” if no selection is made in the field country else says Total sales for : followed by the country name selected.
  
Note: Click on General → Title




If( GetSelectedCount(country)>0,
'Sales for Countries: '& GetFieldSelections(country), 'Total Sales for all countries')


Result:    If no selections made
Else   


134. Create a dynamic title based on the field selections in  2 fields, Products, and countries, which says : Sales for countries: Country names selected.
  
Click on General → Title




='Sales for Countries: '& GetFieldSelections(country) & ' and Sales for Products: '& GetFieldSelections(products)


135. Create a list of OrderId per customer per country


AGGR(Concat( Distinct orderID, ‘|’), CustomerName, Country)


Result:   
Note: Order Id’s will be sorted in ascending order
136. Create a list of OrderId per customer per country sorted by OrderDate


AGGR(Concat( Distinct orderID, ‘|’, orderdate), CustomerName, Country)


137. Create a  list of CustomerName sorted by SalesAmount


Concat(distinct CustomerName ,'-',SalesAmount)


Result: ‘Jen-Hel-Timmy-Jesus-Blue-Helen’


Add Dynamic Links to your chart


138. Create a link that the user can click to visit an external webpage
Tutorial: QlikSense: Create Dynamic links using a field. QlikSense tips


Step 1: Add the link in the measure:


'https://www.imdb.com/title/'&[FieldID]
Step 2: Change on Representation → Link




Embed a button with link to external sites


139. Create a button that the user can select to visit an external website
Tutorial: Qlik Sense: Embed External links using Buttons in QlikSense
  
  

Step 1: Create a button
Step 2: Under actions and navigation select Open a website or email.
Step 3: Add the website address in the website URL








Automate a sheet using a button.


140. Create a button that when pressed clears current selections and makes a selection called ‘Health’ from a field called Industry and automatically moves to the next sheet.


  
Step 1: Create a button
Step 2: Under actions select —>  clear all selection
Step 3: Add an action select —> Select values in a field and enter the desired value of the field
Step 4: Add navigation: select —>  Go to next sheet


Create a What if Analysis chart based on 20% simulation of the actual sales
Sum(SalesAmount)*(1+0.2))
Note: 0.2 = 20% Change to as per your need
  



Variables
141. Create a What IF analysis using variables
Note: Check the masterclass for tutorials
Tutorial: Check the steps here:
How to Dynamically Recalculate measures in the front end.


Step 1: Create a variable called vsales and connect it to the variable input extension.
Step 2: Connect variables to measures
  

THEN USE THE MEASURE:


Sum(SalesAmount)*(1+$(vSales))




















142. Creating a Rank selector using Variables:
Check the tutorial steps here:QlikSense tutorial: How automatically select top-ranked values using buttons & sliders in QlikSense  




Measure:


if(rank(sum(SalesAmount))<= $(vRank), green(),red())














More chart tricks
143. Creating a chart with dimensional reference lines at and color different segments
Note: tutorial: QlikSense : Using Dimensional reference lines to build cool dashboards
Result:
  

Step 1: Add dimensional reference lines with the expression for Reference line location:
In this case: =MakeDate(2022,05,01) & =MakeDate(2023,02,01)  
Step 2: Add the Label, background and color and type of line.
Step 3: Under Chart Appearance- by the expression :   
If(calendar_date < '1/5/2022', Blue(),
        if(calendar_date > MakeDate(2022,05,01) and calendar_date < MakeDate(2023,02,01), Yellow(),
            if(calendar_date > MakeDate(2023,02,01), red())))




144. Create a drill-down changing graph:
Note: Video tutorial: QlikSense: Elevate your dashboard with changing DRILL DOWN charts


Drill down: Map 👉pie chart 👉bar chart
Drill down: Country 👉 State 👉City




    👉   👉  


Step 1: Use a container chart.
Step 2. Add the 3 charts you want. In this case Map, Pie chart and Bar chart   
Step 3:  Click on Map chart show condition:
Add expression: =GetSelectedCount(Dimension of Map)=0
example:=GetSelectedCount(Country)=0        
Step 4: Click on the second chart (Pie Chart) show condition:
Add expression: =GetSelectedCount(Dimension of map)>0 and GetSelectedCount(Dimension of Pie chart)=0
 Example: GetSelectedCount(Country)>0 and GetSelectedCount(StateProvince)=0
Step 5: Click on the third chart (Bar chart) show condition:
Add expression: =GetSelectedCount(Dimension of Bar chart)>0
Example: GetSelectedCount(StateProvince)>0


145. Create a custom tooltip and embed a chart in the tooltip.
Result:  
Step 1: Create the chart you want to embed and make it a master visualization. 


By creating the chart and then right-click -> Add to master items.  
Step 2: Select the chart you want to customize the tooltip. Select tool tip -> Hide basic rows -> Add chart.
Step 3: Select the Chart you added to the master visualization  














146. Create 2 bar charts for side-by-side comparison of SalesAmount per Country using Alternate States
Tutorial: QlikSense Tutorial: Comparative Analysis using Alternate states 101
Expected result:   




Step 1: Create 2 alternate states called State 1 & State 2: Master Items → Alternate states → Create new                                                                                                            
Step 2: Add 2 filter panes with dimension country.
Step 3: Select one of the filter panes & apply alternate states. Go to Appearance → Alternate States → ‘State 1’. Repeat for the second filter and apply State 2  
Step 4: Create 2 bar charts and add dimension country and measure as SalesAmount. 
Step 5: Select one of the Bar charts and apply alternate states. Go to Appearance → Alternate States → ‘State 1’. Repeat the process for the second bar chart  
Now when making selections in the filter panes, only the corresponding Applied State bar chart will be affected.


147. Create a chart to compare total salesAmount for 2 different selections made by user using Alternate State.( Applying alternate states to measures)


Result:  


Step 1: Create 2 alternate states called State 1 & State 2: Master Items → Alternate states → Create new                                                                                                            
Step 2: Add 2 filter panes with the desired dimension.
Step 3: Select one of the filter panes & apply alternate states. Go to Appearance → Alternate States → ‘State 1’. Repeat for the second filter and apply ‘State 2’   
Step 4: Go to master items and create a master measure for state 1:   
Repeat the process for State 2:
Add measure expression: 
Sum({[State 1]}SalesAmount)


Sum({[State 2]}SalesAmount)


Step 5: Select the desired chart and apply the newly created master measures. Now the values in the chart will match the selections made in the Alternate state-applied Filter Panes. 


148. Create dynamic labels for the Alternate States selections.
='Sales' &GetCurrentSelections(chr(13)&chr(10), ':', ',', 9, 'State 1')
Note: Change ‘State 1’ to the name of your Alternate State


149. Compare Alternate State charts by synchronizing selections between regular states the .( Applying alternate states to measures)
Tutorial: https://youtu.be/CwVjuuimGcU 
Adding this to the measure of State 1 and State 2 chart will sync the fields Year and Month based on Default State Year and Month filter.
sum({[State 1] <Year = $::Year, Month = $::Month>}SalesAmount)
sum({[State 2] <Year = $::Year, Month = $::Month>}SalesAmount)
Example: Year 2023 and Month Jan is selected in a default filter.  












In my Alternate State 1:
Only Selection available is Country. However Since When i select a country, the Year and Month and in the default selection i.e Year = 2023 and Month = Jan   is automatically applied  










Despite only Country is selected in Alternate State 1, we are comparing the same year and month as the default State.
150. Create a chart that gives the Intersection of selections made in 2  Alternate State charts .( Applying alternate states to measures)
Tutorial: QlikSense tutorial: Comparative Alternate states using set operators 101  in QlikSense


Example:
State 1: Australia, Canada, China, Germany, South Korea, united Kingdom is selected.
State 2: China, japan, Russia , South Korea, taiwan, United Kingdom is selected.
Results: Chart which shows the Common countries in the 2 alternate selections. I.e China South Korea and United Kingdom.
Measure:
Sum({[State 1] * [State 2]}SalesAmount)
Note: [State 1] * [State 2] gives the intersection of the 2 states.  
151. Create a chart that gives the union of selections made in 2  Alternate State charts .( Applying alternate states to measures)
Tutorial: QlikSense tutorial: Comparative Alternate states using set operators 101  in QlikSense
Example:
State 1: Australia, Canada is selected.
State 2: China, japan is selected.
Results: Chart which shows union of selections countries in the 2 alternate selections. I.e Australia, Canada, China & Japan.
Measure:
Sum({[State 1] + [State 2]}SalesAmount)
Note: [State 1] + [State 2] gives the union of the 2 states.
Note: 
  

152. Create a chart that gives the union of Default state and selections made in  Alternate State 1 charts .( Applying alternate states to measures)
Tutorial: QlikSense tutorial: Comparative Alternate states using set operators 101  in QlikSense
Example:
Default State : Australia, Canada is selected.
State 2: China, japan is selected.
Results: Chart which shows union of selections countries in the 2 alternate selections. I.e Australia, Canada, China & Japan.
Measure:
Sum({$ + [State 1] }SalesAmount)
Note: $ + [State 1] gives the union of the Default State and  state1 .


153. Create a chart that gives the exclusion of selections made in 2  Alternate State charts .( Applying alternate states to measures)
Example:
State 1: Australia, Canada is selected.
State 2: Australia, China, japan, Bhutan is selected.
Results: Chart which shows exclusion of selections countries in the 2 alternate selections. I.e Selections that are made in State 1 but does not exist in State 2.
 In this example only Canada is selected in State 1 since the other selection i.e Australia, exists in State 2 as well, and is hence excluded
Measure:
Sum({[State 1] - [State 2]}SalesAmount)
Note: [State 1] - [State 2] gives the exclusion of the 2 states.


  



















154. Create a dynamic map that shows Top Ranked Cities per country based on highest sales. No of cities to be shown based on user input Rank values.
Tutorial: QlikSense tutorial: Dynamic maps using user input variable
Result:   
Step one: Create a variable  
Step two: Variable Input:   
Step 3: Connect the newly created variable to the variable input and and add the min Max values.
   
Step 4: Add MAps chart to the sheet
Step 5: Add a point layer and the following as Dimension: 


aggr(If(aggr(rank(Sum(SalesAmount)),Country,City) <= $(vRank), City), City)


 Step 5 Location: Cities (Since we want to plot the cities)
Step 6 Colors: Based on Dimension
Step 7 Tool Tip: Add measures you want to show. Example Show Rank: 
aggr(rank(sum(SalesAmount)),Country,City)
Show: Percentage of Sales of the city to the Total Sales of all cities in that country:
aggr( sum(SalesAmount)/Sum(Total<Country>(SalesAmount)),Country, City)


155. How to Reload Apps from the front end 
Watch the trick: https://youtube.com/shorts/YOxqQ4lNw7Y?feature=share
Note: You need to be the owner of the app to be able to have the rights to reload the app
Method 1:
Step 1: Add a Button
Step 2: Configure the button → Add Action → Reload Data   
Method 2: Go to fields → Reload Data